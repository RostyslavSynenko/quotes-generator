{"version":3,"sources":["config/index.js","QuotesContext.js","components/Quote.js","components/Buttons.js","utils/index.js","components/QuotesContainer.js","App.js","index.js"],"names":["colors","QuotesContext","createContext","QuotesProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","quote","setQuote","_useState3","_useState4","quotes","setQuotes","_useState5","_useState6","color","setColor","changeQuote","colorIndex","Math","floor","random","length","newColor","quoteIndex","getQuotes","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","useEffect","react_default","createElement","Provider","value","Quote","_useContext","useContext","styles","style","id","className","author","Buttons","backgroundColor","tweetUrl","concat","getTweetUrl","tumblrUrl","getTumblrUrl","href","target","rel","title","onClick","QuotesContainer","components_Quote","components_Buttons","App","QuotesContext_QuotesProvider","components_QuotesContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2273e267.chunk.js","sourcesContent":["export const quotesUrl =\r\n  'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/';\r\n\r\nexport const colors = [\r\n  '#002962',\r\n  '#007c86',\r\n  '#9e324d',\r\n  '#da1820',\r\n  '#cccccc',\r\n  '#fcd134',\r\n  '#79c142',\r\n  '#70c405',\r\n  '#0397d5',\r\n  '#37baf5',\r\n  '#00aec2',\r\n  '#a90412',\r\n  '#27308b',\r\n  '#20328f',\r\n  '#ff1744',\r\n  '#000000',\r\n  '#ac6283',\r\n  '#ff1744',\r\n  '#4e021b',\r\n  '#77001a',\r\n  '#20328f',\r\n  '#27308b',\r\n  '#556832',\r\n  '#695b51',\r\n  '#ea4cc0',\r\n  '#ffc300',\r\n  '#4285f4',\r\n  '#840000',\r\n  '#4285f4',\r\n  '#ffc300',\r\n  '#bebebe',\r\n  '#dddddd',\r\n  '#cbbeb5',\r\n  '#808080',\r\n  '#c0d6e4',\r\n  '#468499'\r\n];\r\n","import React, {\r\n  createContext,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\n\r\nimport { quotesUrl, colors } from './config';\r\n\r\nconst QuotesContext = createContext();\r\n\r\nconst QuotesProvider = ({ children }) => {\r\n  const [quote, setQuote] = useState({});\r\n  const [quotes, setQuotes] = useState(null);\r\n  const [color, setColor] = useState('black');\r\n\r\n  const changeQuote = () => {\r\n    const colorIndex = Math.floor(\r\n      Math.random() * colors.length\r\n    );\r\n    const newColor = colors[colorIndex];\r\n    const quoteIndex = Math.floor(\r\n      Math.random() * quotes.length\r\n    );\r\n\r\n    setColor(newColor);\r\n    setQuote(quotes[quoteIndex]);\r\n  };\r\n\r\n  const getQuotes = async () => {\r\n    const response = await fetch(quotesUrl);\r\n    const data = await response.json();\r\n\r\n    setQuotes(data.quotes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!quotes) {\r\n      getQuotes();\r\n    } else {\r\n      changeQuote();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [quotes]);\r\n\r\n  return (\r\n    <QuotesContext.Provider\r\n      value={{ quotes, quote, color, changeQuote }}\r\n    >\r\n      {children}\r\n    </QuotesContext.Provider>\r\n  );\r\n};\r\n\r\nexport { QuotesProvider, QuotesContext };\r\n","import React, { useContext } from 'react';\r\n\r\nimport { QuotesContext } from '../QuotesContext';\r\n\r\nconst Quote = () => {\r\n  const { quote, color } = useContext(QuotesContext);\r\n  const styles = { color };\r\n\r\n  return (\r\n    <div style={styles}>\r\n      <p id=\"text\">\r\n        <i className=\"fas fa-quote-left quotes-icon \"></i>\r\n        {quote.quote}\r\n      </p>\r\n      <p id=\"author\">- {quote.author}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { QuotesContext } from '../QuotesContext';\r\nimport { getTweetUrl, getTumblrUrl } from '../utils';\r\n\r\nconst Buttons = () => {\r\n  const { changeQuote, color, quote } = useContext(\r\n    QuotesContext\r\n  );\r\n  const styles = { backgroundColor: color };\r\n  const tweetUrl = getTweetUrl(quote);\r\n  const tumblrUrl = getTumblrUrl(quote);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <div className=\"icons-container\">\r\n        <div>\r\n          <a\r\n            id=\"tweet-quote\"\r\n            href={tweetUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            title=\"Tweet this quote!\"\r\n            className=\"icons\"\r\n            style={styles}\r\n          >\r\n            <i className=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n        <div id=\"tumblr-quote\">\r\n          <a\r\n            href={tumblrUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            title=\"Post this quote on tumblr!\"\r\n            className=\"icons\"\r\n            style={styles}\r\n          >\r\n            <i className=\"fab fa-tumblr\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button\r\n          id=\"new-quote\"\r\n          style={styles}\r\n          onClick={changeQuote}\r\n        >\r\n          New quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","export const getTweetUrl = ({ quote, author }) => {\r\n  const tweetUrl = `https://twitter.com/intent/tweet?hashtags=quote&text=\"${quote}\" ${author}`;\r\n\r\n  return tweetUrl;\r\n};\r\n\r\nexport const getTumblrUrl = ({ quote, author }) => {\r\n  const tumblrUrl = `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes&caption=${author}&content=${quote}&canonicalUrl=https://www.tumblr.com/buttons&shareSource=tumblr_share_button`;\r\n\r\n  return tumblrUrl;\r\n};\r\n","import React, { useContext } from 'react';\r\n\r\nimport { QuotesContext } from '../QuotesContext';\r\nimport Quote from './Quote';\r\nimport Buttons from './Buttons';\r\n\r\nconst QuotesContainer = () => {\r\n  const { color } = useContext(QuotesContext);\r\n  const styles = { backgroundColor: color };\r\n\r\n  return (\r\n    <div className=\"container\" style={styles}>\r\n      <div id=\"quote-box\">\r\n        <Quote />\r\n        <Buttons />\r\n      </div>\r\n      <a\r\n        href=\"https://github.com/RostyslavSynenko\"\r\n        className=\"by\"\r\n      >\r\n        by RSynenko\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuotesContainer;\r\n","import React from 'react';\r\n\r\nimport { QuotesProvider } from './QuotesContext';\r\nimport QuotesContainer from './components/QuotesContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <QuotesProvider>\r\n      <QuotesContainer />\r\n    </QuotesProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}